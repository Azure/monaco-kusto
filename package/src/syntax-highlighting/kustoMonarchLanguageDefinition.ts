import type * as monaco from 'monaco-editor';
import { LANGUAGE_ID } from '../globals';
import { Token } from './types';

// TODO: add more static keywords for faster coloring
const queryOperators = [
    'where',
    'count',
    'extend',
    'join',
    'limit',
    'order',
    'project',
    'project-away',
    'project-rename',
    'project-reorder',
    'project-keep',
    'render',
    'sort',
    'summarize',
    'distinct',
    'take',
    'top',
    'top-nested',
    'top-hitters',
    'union',
    'mv-expand',
    'mv-apply',
    'reduce',
    'evaluate',
    'parse',
    'parse-where',
    'parse-kv',
    'sample',
    'sample-distinct',
    'make-series',
    'getschema',
    'serialize',
    'invoke',
    'as',
    'scan',
    'make-graph',
    'graph-match',
    'graph-to-table',
    'graph-merge',
];
const commands = [
    '.add',
    '.alter',
    '.alter-merge',
    '.attach',
    '.append',
    '.create',
    '.create-merge',
    '.create-set',
    '.create-or-alter',
    '.define',
    '.detach',
    '.delete',
    '.drop',
    '.drop-pretend',
    '.dup-next-ingest',
    '.dup-next-failed-ingest',
    '.ingest',
    '.export',
    '.load',
    '.move',
    '.purge',
    '.purge-cleanup',
    '.remove',
    '.replace',
    '.save',
    '.set',
    '.set-or-append',
    '.set-or-replace',
    '.show',
    '.rename',
    '.run',
];
const functions = ['sum', 'count'];

export const kustoLanguageDefinition: monaco.languages.IMonarchLanguage = {
    name: LANGUAGE_ID,
    mimeTypes: ['text/kusto'],
    displayName: 'Kusto',
    defaultToken: 'invalid',
    queryOperators,
    commands,
    functions,
    tokenizer: {
        root: [
            [/(\/\/.*$)/, Token.Comment],
            [/[\(\)\{\}\|\[\]\:\=\,]/, Token.Punctuation],
            [/"([^"\\]*(\\.[^"\\]*)*)"/, Token.StringLiteral],
            [
                /[\w@#\-$\.]+/,
                {
                    cases: {
                        '@queryOperators': Token.QueryOperator,
                        '@commands': Token.Command,
                        '@functions': Token.Function,
                        '@default': 'identifier',
                    },
                },
            ],
        ],
    },
};
